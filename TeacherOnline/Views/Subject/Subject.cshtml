@{
    ViewData["Title"] = "Предметы";
}
@model IEnumerable<TeacherOnline.DAL.Entities.Subject>
<h2>@ViewData["Title"]</h2>
@if (User.IsInRole("Teacher"))
}
    <a class="btn btn-success" asp-controller="Subject" asp-action="CreateSub">Создать предмет<br /></a>
{
    @*идея: эту страницу сделать доступной для преподавателя и учащегося, а для учащегося сделать возможность просмотр отметок по предмету
        но тогда зачем страница с отметками.....
    *@

<table class="table table-sm">
    <thead>
        <tr>
            <th scope="col">Название предмета</th>
            @if (User.IsInRole("Teacher"))
            {
                <th scope="col">Действие</th>
                <th scope="col">Действие</th>
                @*тут бы объединить 2 стролбца в 1*@
            } @*тут проверочка на иденцифицированного пользователя*@
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model){
            <tr>
                <th scope="row">
                    <a class="btn btn-primary" asp-controller="Subject" asp-action="StudyOfSub" asp-route-id="@item.Id"> @item.Name <br /></a>
                </th>
                @if(item.IdTeacher == (int)ViewData["Id"])
                {
                <td>
                    <form mehtod="post" asp-contoller="Subject" asp-action="DeleteSub" asp-route-id="@item.Id">
                        <button class="btn btn-danger" type="submit" value="delete">Удалить</button>
                    </form>
                </td>
                <td>
                    <a class="btn btn-warning" asp-controller="Subject" asp-action="UpdateSub" asp-route-id="@item.Id">Изменить</a>
                </td>
                }
            </tr>
        }
    </tbody>
</table>