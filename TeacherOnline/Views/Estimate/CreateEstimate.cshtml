@{
    ViewData["Title"] = "Создать отметку";

}
@functions {
    public string fioUser(TeacherOnline.DAL.Entities.Profile profile)
    {
        string fioUser = $"{profile.LastName} {profile.FirstName[0]}. {profile.Otchestvo[0]}.";
        return fioUser;
    }
    public string fioTeacher(TeacherOnline.DAL.Entities.Profile profile)
    {
        string fioTeacher = $"{profile.LastName} {profile.FirstName[0]}. {profile.Otchestvo[0]}.";
        return fioTeacher;
    }
}
@model TeacherOnline.DTO.ViewModel.EstimateVM;
<h2>@ViewData["Title"]</h2>

<form asp-controller="Estimate" asp-action="CreateEstimate" method="post">
    <div class="mb-3">
        <div class="col-md-3">
            <label for="inputDepartment" class="form-label">Группа</label>
            <select id="Group" class="form-select" onchange="LoadDLOnSubject(this, 'Subject', 'Users');">
                <option selected disabled value="">Выберите группу</option>
                @foreach (var item in Model.groups)
                {
                    <option value="@item.Id">@item.Name</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label for="inputDepartment" class="form-label">Предмет</label>
            <select id="Subject" class="form-select" onchange="LoadDLOnUsers(this, 'Users')" asp-for="@Model.estimate.IdSubject"></select>
        </div>
        <div class="col-md-3">
            <label for="inputDepartment" class="form-label">Учащийся</label>
            <select id="Users" class="form-select" asp-for="@Model.estimate.IdUser"></select>
        </div>
        <label class="form-label">Отметка</label>
        <input type="range" class="form-range" min="1" max="10" asp-for="@Model.estimate.Score">
    </div>
    <button type="submit" class="btn btn-primary">Создать отметку</button>
</form>
@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        var tempGroupId = 0;
        function LoadDLOnUsers(SubjectId, htmlIdUsers) {
            var listUser = $("#" + htmlIdUsers);
            listUser.empty();
            listUser.append($('<option/>',
                {
                    value: null,
                    text: "Выберите студента"
                }));
            $(listUser[0][0]).attr('disabled', true);
            $(listUser[0][0]).attr('selected', true);
            var selectedSubject = SubjectId.options[SubjectId.selectedIndex].value;
            var selectedGroup = tempGroupId.options[tempGroupId.selectedIndex].value;
            if (selectedSubject != null && selectedSubject != '' && selectedGroup != null && selectedGroup != '') {
                $.getJSON('@Url.Action("GetUserBySubject")', { subjectId: selectedSubject, groupId: selectedGroup }, function (users) {
                    if (users != null && !jQuery.isEmptyObject(users)) {
                        $.each(users, function (index, user) {
                            listUser.append($('<option/>', {
                                value: user.value,
                                text: user.text
                            }));
                        });
                    };
                });
            };
        };
        function LoadDLOnSubject(GroupId, htmlIdSubject, htmlIdUsers) {
            tempGroupId = GroupId;
            var listubject = $("#" + htmlIdSubject);
            listubject.empty();
            listubject.append($('<option/>',
                {
                    value: null,
                    text: "Выберите предмет"
                }));
            $(listubject[0][0]).attr('disabled', true);
            $(listubject[0][0]).attr('selected', true);
            var listUser = $("#" + htmlIdUsers);
            listUser.empty();
            var selectedGroup = GroupId.options[GroupId.selectedIndex].value;
            if (selectedGroup != null && selectedGroup != '') {
                $.getJSON('@Url.Action("GetSubjectOnGroup")', { groupId: selectedGroup }, function (subjects) {
                    if (subjects != null && !jQuery.isEmptyObject(subjects)) {
                        $.each(subjects, function (index, subject) {
                            listubject.append($('<option/>', {
                                value: subject.value,
                                text: subject.text
                            }));
                        });
                    };
                });
            };
        };
    </script>
}